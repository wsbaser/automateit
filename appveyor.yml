# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - develop

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

# Skipping commits with particular message or from specific user
skip_commits:
  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
  author: John                                      # Commit author's username, name, email or regexp maching one of these.

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#skip_commits:
#  files:
#    - docs/*
#    - '**/*.html'

# Including commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#only_commits:
#  files:
#    - Project-A/
#    - Project-B/

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input


# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

# # scripts that run after cloning repository
# install:
  # # to run script as a PowerShell command prepend it with ps:
  # - ps: nuget restore

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "1.0.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: Selenium.Net.sln      # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: minimal


# scripts to run before build
before_build:
  -  ps: nuget restore

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test:
  assemblies:
    - Selenium.Core.Tests.dll

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# # scripts to run before tests
# before_test:
  # - echo script1
  # - ps: Write-Host "script1"

# # scripts to run after tests
# after_test:

# # to run your custom scripts instead of automatic tests
# test_script:
#  - echo This is my custom test script

# to disable automatic tests
#test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

# artifacts:

  # # pushing a single file
  # - path: test.zip

  # # pushing a single file with environment variable in path and "Deployment name" specified
  # - path: MyProject\bin\$(configuration)
    # name: myapp

  # # pushing entire folder as a zip archive
  # - path: logs

  # # pushing all *.nupkg files in build directory recursively
  # - path: '**\*.nupkg'

# #---------------------------------#
# #        global handlers          #
# #---------------------------------#

# # on successful build
# on_success:
  # - do something

# # on build failure
# on_failure:
  # - do something

# # after build failure or success
# on_finish:
  # - do something


#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications:

  # # Email
  # - provider: Email
    # to:
      # - user1@email.com
      # - user2@email.com
    # subject: 'Build {{status}}'                  # optional
    # message: "{{message}}, {{commitId}}, ..."    # optional
    # on_build_status_changed: true

  # # HipChat
  # - provider: HipChat
    # auth_token:
      # secure: RbOnSMSFKYzxzFRrxM1+XA==
    # room: ProjectA
    # template: "{message}, {commitId}, ..."

  # # Slack
  # - provider: Slack
    # incoming_webhook: http://incoming-webhook-url

  # # ...or using auth token

  # - provider: Slack
    # auth_token:
      # secure: kBl9BlxvRMr9liHmnBs14A==
    # channel: development
    # template: "{message}, {commitId}, ..."

  # # Campfire
  # - provider: Campfire
    # account: appveyor
    # auth_token:
      # secure: RifLRG8Vfyol+sNhj9u2JA==
    # room: ProjectA
    # template: "{message}, {commitId}, ..."

  # # Webhook
  # - provider: Webhook
    # url: http://www.myhook2.com
    # headers:
      # User-Agent: myapp 1.0
      # Authorization:
        # secure: GhD+5xhLz/tkYY6AO3fcfQ==
    # on_build_success: false
    # on_build_failure: true
    # on_build_status_changed: true